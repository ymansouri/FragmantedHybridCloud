#!/bin/bash

# Configure wireguard on both server and client: this script receives two publc ips via a file in config file or as a string "SERVER_IP CLIENT_IP"
#Server/Donor, Client:Consumer
. config

if [[ "$6" == "" ]]
then
  echo "Usage: $0 <PUBLIC_IPS> <PRIVATE_IPS> <WG_PORT> <WG_SUBNET> <WG_SERVER_IP> <WG_CLIENT_IP>"
  exit
fi

function hosts2dests {
  #$1 list of hosts
  #$2 username
  DESTS=
  for HOST in $1
  do
    DESTS=${DESTS},${2}@${HOST}:/home/${2}
  done
  echo ${DESTS#,}
}


PUBLIC_IPS=$1
echo PUBLIC_IPS: $PUBLIC_IPS

#PRIVATE_IPS=$(cat ${PRIVATE_IPS_FILE})
PRIVATE_IPS=$2
echo PRIVATE_IPS: ${PRIVATE_IPS}
WG_ENDPOINT_IP=$(echo $PRIVATE_IPS | cut -f 1 -d ' ')
#echo ${WG_ENDPOINT_IP}

WG_PORT=$3
WG_SUBNET=$4
WG_SERVER_IP=$5
WG_CLIENT_IP=$6


echo all_variables: $PUBLIC_IPS $PRIVATE_IPS $WG_PORT $WG_SERVER_IP $WG_CLIENT_IP

ALL_DESTINATIONS=$(hosts2dests "${PUBLIC_IPS}" ${VM_USERNAME})
#echo ALL_DESTINATIONS: ${ALL_DESTINATIONS}

DEST_SERVER=$(echo ${ALL_DESTINATIONS}| cut -f 1 -d ',')
DEST_CLIENT=$(echo ${ALL_DESTINATIONS}| cut -f 2 -d ',')


SSH_SERVER=${DEST_SERVER%:*}
SSH_CLIENT=${DEST_CLIENT%:*}

#echo SSH_SERVER: ${SSH_SERVER}
#echo SSH_CLIENT: ${SSH_CLIENT}

SERVER_PUBLIC_KEY=$(./wireguard/get-public-key.sh  ${SSH_SERVER#*@})
CLIENT_PUBLIC_KEY=$(./wireguard/get-public-key.sh  ${SSH_CLIENT#*@})

# CONFIG WIREGURAD ON SERVER
./wireguard/deployWireguardServer.sh ${SSH_SERVER} ${WG_PORT} ${WG_SERVER_IP}/32  ${WG_CLIENT_IP} ${CLIENT_PUBLIC_KEY}


# CONFIG WIREGUARD ON CLIENT
echo ./wireguard/deployWireguardClient.sh ${SSH_CLIENT}  ${WG_ENDPOINT_IP}:${WG_PORT}  ${WG_SUBNET} ${WG_CLIENT_IP}/32 ${SERVER_PUBLIC_KEY} 
./wireguard/deployWireguardClient.sh ${SSH_CLIENT}  ${WG_ENDPOINT_IP}:${WG_PORT}  ${WG_SUBNET} ${WG_CLIENT_IP}/32 ${SERVER_PUBLIC_KEY} 

# Establish connection between server and client  via wireguard
./wireguard/authorizeClient.sh  ${WG_CLIENT_IP}  ${SSH_SERVER#*@}  ${SSH_CLIENT#*@} ${VM_USERNAME}










































