#!/bin/bash

############################################

# This script will run Scenario-1. This will apply latency and bandwidth values on all nodes, run the database.
# Next, it will apply varying latency and default bandwidth rules, run the workloads for specified database.

###########################################

. config
if [[ $# < 1 ]]
then
  echo Usage $0 DB_NAME
  exit
fi
DB_NAME=$1

echo "Experiments are starting with varying latency and default bandwidth"

function apply_rules_on_cluster_for_worker()
{
   IFS=,$'\n' read -d '' -r -a ip_arr < ${PUBLIC_IPS_FILE}
   ip_arr=(${ip_arr})

   echo ip_arr: ${ip_arr[@]}

   for IP in "${ip_arr[@]}";
   do 
       if [[ $IP != ${WORKER_IP_IN_CLUSTER} ]]
       then
        #echo ssh -o StrictHostKeyChecking=no ${VM_USERNAME}@${IP} "cd tc-command-file-client; sudo bash tc-command-file_d${1}_b_def"
        #echo ssh -o StrictHostKeyChecking=no ${VM_USERNAME}@${IP} "cd tc-command-file-client; sudo bash tc-command-file_d${1}_b_def"
       fi
   done
}


PRE_FILE="latency_def.csv"

##########################

# Here, Please specify the latency files, we intend to use
# Example - for file_name in latency-20.csv (4X)  latency-40.csv (3X)  latency-60.csv (2X)  latency-80.csv (X) latency_def.csv (5X)

##########################

for file_name in  latency_def.csv latency-20.csv  latency-40.csv  latency-60.csv   latency-80.csv
do

    delay_without_trim=$(echo ${file_name}| cut -f 1 -d '.'| sed 's/latency/ /g')
    delay=`echo ${delay_without_trim} | sed 's/ *$//g'`
    echo THE VALUE OF DELAY IS $delay AND THE VALUE OF BANDWIDTH IS DEFAULT

    #Step 1: Set latency ith default value for bandwidth
    LATENCY_FILE=${file_name}
    PRE_LATENCY_FILE=${PRE_FILE}

    echo sed -i 's/LATENCY_FILE=${PATH_PREFIX}\/'${PRE_LATENCY_FILE}'/LATENCY_FILE=${PATH_PREFIX}\/'${LATENCY_FILE}'/' ../config
    sed -i 's/LATENCY_FILE=${PATH_PREFIX}\/'${PRE_LATENCY_FILE}'/LATENCY_FILE=${PATH_PREFIX}\/'${LATENCY_FILE}'/' ../config

    PRE_FILE=${file_name}

    echo -e "\e[44mSTEP 1_1: REMOVE TC RULES FROM CLUSTER\e[0m"
    # Step1_1 : Remove tc rules from cluster 
     ../02-tc-config/04-remove-bandwidth-latency-matrix-rules.sh
    sleep 30

    #Step 2_1: Apply tc rules on cluster 
    echo -e "\e[44mSTEP 2_1: APPLY TC RULES ON CLUSTER\e[0m"

    ../02-tc-config/02-apply-bandwidth-latency-matrix.sh


    #step 3: Run database on cluster
    echo -e "\e[44mSTEP 3:RUN DATABASE ON CLUSTER \e[0m"

    time ./frag-db-workload-singlevm2hybridcloud.sh ${DB_NAME}  ${WORKER_IP}  worker2fragcloud-d${delay}_b_def
done
